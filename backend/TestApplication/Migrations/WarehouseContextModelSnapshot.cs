// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApplication.Database;

namespace TestApplication.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    partial class WarehouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TestApplication.Database.Good", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("InStock");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("TestApplication.Database.Insurance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("TestApplication.Database.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<Guid>("GoodId");

                    b.Property<Guid>("PickpointId");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("PickpointId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TestApplication.Database.OrderInsurance", b =>
                {
                    b.Property<Guid>("InsuranceId");

                    b.Property<Guid>("OrderId");

                    b.HasKey("InsuranceId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderInsurance");
                });

            modelBuilder.Entity("TestApplication.Database.Pickpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Pickpoints");
                });

            modelBuilder.Entity("TestApplication.Database.Order", b =>
                {
                    b.HasOne("TestApplication.Database.Good", "Good")
                        .WithMany()
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TestApplication.Database.Pickpoint", "Pickpoint")
                        .WithMany()
                        .HasForeignKey("PickpointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TestApplication.Database.OrderInsurance", b =>
                {
                    b.HasOne("TestApplication.Database.Insurance", "Insurance")
                        .WithMany("OrderInsurances")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TestApplication.Database.Order", "Order")
                        .WithMany("OrderInsurances")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
